{
  "hash": "ff2dde3a08ca1aaf1a4aa8befcdc67e1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Nomilo Fishpond Biogoechemical Analysis\"\nauthor: \n  - name: \"Lysbeth Koster\"\n  - name: \"Alemarie Ceria\"\ndate: \"02/28/2024\"\nexecute: \n  warning: false\n  messages: false\n  echo: fenced\ncode-annotations: hover\ncode-overflow: wrap\nformat: \n  html:\n    toc-title: \"Data Analysis Workflow:\"\n    toc-location: left\n\n---\n\n\n::: {.callout title=\"Interactive Code\"}\nThroughout this document, hover over the numbered annotations to the right of code chunks to reveal detailed explanations and comments about the code. Where drop-down *italicized* text is present, expand to see tidying processes.\n:::\n\n## Install Packages\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: Install Packages\n#| eval: false\ninstall.packages(c(\"rio\", \"tidyverse\", \"janitor\", \"lubridate\", \"DT\"))\n```\n````\n:::\n\n\n## Load Libraries\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: Load Libraries\n\nlibrary(rio) # <1>\nlibrary(tidyverse) # <2>\nlibrary(janitor) # <3>\nlibrary(lubridate) # <4>\nlibrary(DT) # <5>\n```\n````\n:::\n\n\n1. For importing excel data\n2. For cleaning of data \n3. For cleaning variable names\n4. For cleaning dates\n5. For displaying tables\n\n## Get Data File Names\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{bash}}\n#| label: Get Data File Names\ncd \"data/raw\" # <1>\nls # <2> \n```\n````\n\n\n::: {.cell-output .cell-output-stdout}\n\n```\n~$ksf_compiled_data.xlsx\n2024-02-28_ksf-clam-growth.xlsx\n2024-02-28_ksf-compiled-data.xlsx\n2024-02-28_ksf-oyster-cylinder-growth.xlsx\n2024-02-28_profile-data.xlsx\n2024-02-28_water-samples.xlsx\n2024-02-28_weather-data.xlsx\n```\n\n\n:::\n:::\n\n\n1. Change directory to \"data/raw\"\n2. List files within directory \n\n## Import data\n\nDefine vector of files to import by copying and pasting file names from above: \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: Create Vector of File Paths\nfiles_to_import <- c(\n  \"data/raw/2024-02-28_ksf-clam-growth.xlsx\",\n  \"data/raw/2024-02-28_ksf-compiled-data.xlsx\",\n  \"data/raw/2024-02-28_ksf-oyster-cylinder-growth.xlsx\",\n  \"data/raw/2024-02-28_profile-data.xlsx\",\n  \"data/raw/2024-02-28_water-samples.xlsx\",\n  \"data/raw/2024-02-28_weather-data.xlsx\"\n)\n```\n````\n:::\n\n\nUse the `purrr::map()` function to iteratively import all files in the `files_to_import` vector: \n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: Iteratively Import Data\ndfs <- map(files_to_import, import_list)\n```\n````\n:::\n\n\nRename dataframes:\n\nWe will always use snakecase when naming our data objects and functions (e.g., `data_object_name` or `function_name()`).\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: Rename Datasets\nnames(dfs) <- gsub(\"data/raw/2024-02-28_|\\\\.xlsx$|\\\\.xls$\", \"\", files_to_import) # <1>\nnames(dfs) <- gsub(\"-\", \"_\", names(dfs)) # <2>\nnames(dfs) # <3>\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ksf_clam_growth\"            \"ksf_compiled_data\"         \n[3] \"ksf_oyster_cylinder_growth\" \"profile_data\"              \n[5] \"water_samples\"              \"weather_data\"              \n```\n\n\n:::\n:::\n\n\n1. Remove prefixes and file extensions\n2. Replace hyphens with underscores\n3. Check if names were outputted correctly\n\nRename each sheet within each dataset to be lowercased and replace spaces with underscores:\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: Rename Sheets Within Each Dataset\ndfs <- map(dfs, ~ set_names(.x, gsub(\" \", \"_\", tolower(names(.x)))))\n```\n````\n:::\n\n\n## Tidy Data\n\n### Create Datasets\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: Create Datasets\nksf_compiled_data <- dfs$ksf_compiled_data$full_data\nksf_clam_growth_data <- dfs$ksf_clam_growth$sheet1\nksf_oyster_cylinder_growth_data <- dfs$ksf_oyster_cylinder_growth$sheet1\nprofile_data <- dfs$profile_data$final_data\nwater_samples_data <- dfs$water_samples$data_overview\nweather_data <- dfs$weather_data$weather_ksf\n```\n````\n:::\n\n\n### Tidying Processes\n\n::: {.panel-tabset}\n\n#### ksf_compiled_data\n\n\n::: {.cell}\n\n````{.cell-code  code-fold=\"true\" code-summary=\"<i>Steps to clean data</i>\"}\n```{{r}}\n#| label: Tidy `ksf_compiled_data` Dataset\n#| code-fold: true\n#| code-summary: <i>Steps to clean data</i>\nksf_compiled_data_tidied <- ksf_compiled_data %>% \n  rename_with(~gsub(\"\\\\s*\\\\([^\\\\)]+\\\\)\", \"\", .x)) %>% # <1>\n  janitor::clean_names() %>% # <1>\n  rename(date = date_time) %>%  # <2>\n  mutate(date = as.Date(date)) %>% # <2>\n  filter(date >= as.Date(\"2023-11-20\") & date <= as.Date(\"2024-02-20\")) %>% # <2>\n  arrange(date) %>%  # <2>\n  dplyr::select(-c(external_voltage, wk_num, wind_dir, # <3>\n                   spadd, outdoor_temperature, hourly_rain, # <3>\n                   solar_radiation, resistivity, battery_capacity, # <3>\n                   hour, daynum, data_pt, wind_sp, diradd, # <3>\n                   wind_speed, wind_direction, tide, day, month, year) # <3>\n                ) %>% # <3>\n  dplyr::select(where(~ !anyNA(.))) %>%  # <4>\n  group_by(date) %>% # <5>\n  summarise(across(where(is.numeric), \\(x) mean(x, na.rm = TRUE))) # <5>\n\ndatatable(ksf_compiled_data_tidied)\n```\n````\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-0fb81c7ac724960fd3b3\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0fb81c7ac724960fd3b3\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"datacontainer\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>date<\\/th>\\n      <th>rdo_concentration<\\/th>\\n      <th>rdo_saturation<\\/th>\\n      <th>oxygen_partial_pressure<\\/th>\\n      <th>actual_conductivity<\\/th>\\n      <th>specific_conductivity<\\/th>\\n      <th>salinity<\\/th>\\n      <th>density<\\/th>\\n      <th>total_dissolved_solids<\\/th>\\n      <th>chlorophyll_a_fluorescence<\\/th>\\n      <th>ammonium<\\/th>\\n      <th>ammonium_m_v<\\/th>\\n      <th>barometric_pressure<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7,8,9,10,11,12,13]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"date\",\"targets\":1},{\"name\":\"rdo_concentration\",\"targets\":2},{\"name\":\"rdo_saturation\",\"targets\":3},{\"name\":\"oxygen_partial_pressure\",\"targets\":4},{\"name\":\"actual_conductivity\",\"targets\":5},{\"name\":\"specific_conductivity\",\"targets\":6},{\"name\":\"salinity\",\"targets\":7},{\"name\":\"density\",\"targets\":8},{\"name\":\"total_dissolved_solids\",\"targets\":9},{\"name\":\"chlorophyll_a_fluorescence\",\"targets\":10},{\"name\":\"ammonium\",\"targets\":11},{\"name\":\"ammonium_m_v\",\"targets\":12},{\"name\":\"barometric_pressure\",\"targets\":13}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n1. Clean variable names by removing everything in parentheses, using lowercase \nand underscores in place of spaces\n2. Rename the `date_time` variable to `date`, filter to desired date range and \nsort by `date`\n3. Remove unnecessary variables\n4. Remove columns with containing all NA values\n5. Group by `date` and calculate the average of every variable for each day\n\n#### ksf_clam_growth_data\n\n#### ksf_oyster_cylinder_growth_data\n\n#### profile_data\n\n#### water_samples_data\n\n#### weather_data\n\n::: \n\n### Export Tidied Datasets\n\nExport tidied data sets to csv into `data/tidied` folder.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: Export Tidied Datasets\n#| eval: false\nwrite.csv(ksf_compiled_data_tidied, file = \"data/tidied/ksf_compiled_data_tidied.csv\", row.names = FALSE)\n```\n````\n:::\n\n\nExport merged final data set into `data/outputs` folder.\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.6.1/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.32/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}