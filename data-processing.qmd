---
title: "Data Processing"
author: 
  - name: "Lysbeth Koster"
  - name: "Alemarie Ceria"
date: "02/28/2024"
execute: 
  warning: false
  message: false
code-annotations: hover
code-overflow: wrap
format: 
  html:
    toc-title: "Steps:"
    toc-location: left
---

## Helper Functions

```{r}
#| code-fold: true
#| code-summary: "Function to load XLSX file to a large list"
load_xlsx_files_to_list <- function(dir_path) {
  fs::dir_ls(path = dir_path) %>%
  keep(str_detect(., ".xlsx$")) %>%
  set_names(nm = ~ gsub("data/raw/2024-02-28_|\\.xlsx$|\\.xls$", "", .)) %>%
  map(import_list) %>%
  set_names(~ gsub("-", "_", .)) %>%
  map(~ set_names(.x, gsub("-", "_", names(.x)))) %>% 
  map(~ set_names(.x, gsub(" ", "_", tolower(names(.x)))))
}
```

```{r}
#| code-fold: true
#| code-summary: "Function to export large list of dataframes to a RData file for more efficient data loading"
export_to_rdata <- function(dfs_list, dir_path) {
  current_date <- format(Sys.Date(), "%Y-%m-%d")
  save(dfs_list, file = paste0(dir_path, current_date, "_dfs.RData"))
}
```

```{r}
#| code-fold: true
#| code-summary: "Function to load specific Excel sheets for each dataset"
load_xlsx_sheet <- function(dfs_list, df, sheet) {
  dfs_list %>% 
    pluck(df, sheet)
}
```

```{r}
#| code-fold: true
#| code-summary: "Function to export data object to CSV"
export_to_csv <- function(df, df_name, dir_path) {
  current_date <- format(Sys.Date(), "%Y-%m-%d")
  file_name <- gsub("_", "-", df_name)
  full_file_path <- paste0(dir_path, "/", current_date, "_", file_name, ".csv")
  write.csv(df, full_file_path, row.names = FALSE)
  message("Exported file to ", full_file_path)
}
```

## Data Importation

### Data Sources

| Data Producer   | Dataset                       | Dataset Description                                                                                           |
|--------------------|--------------------|--------------------------------|
| Lysbeth         | Water Samples                 | Measurements to represent the biogeochemical dynamics of Nomilo Fishpond                                      |
| Lysbeth         | Water Profiles                | Measurements of basic physical water quality indicators                                                       |
| Kauaʻi Sea Farm | Clam Growth                   | Growth and harvest data of clams at Nomilo                                                                    
                                                   fishpond gathered by Kauai Sea Farm                                                                            |
| Kauaʻi Sea Farm | Oyster Growth                 | Growth and harvest data of the *Mercenaria mercenaria* clams and *Crassostrea gigas* oysters at Nomilo        
                                                   fishpond gathered by Kauai Sea Farm                                                                            |
| Kauaʻi Sea Farm | Weather                       | Meteorological measurements and weather data reports that were kept on-site by Kauai Sea Farmaccessed through 
                                                   weather.kauaiseafarm.com                                                                                       |
| Kauaʻi Sea Farm | Kauaʻi Sea Farm Compiled Data | Various                                                                                                       
                                                   daily water quality metrics at the surface level (approximately 0.5m) at the                                   
                                                   Production Dock location of Nomilo fishpond measured by Kauai Sea Farm                                         |

### Procedure

```{r}
#| label: install-packages-and-load-libraries
#| code-fold: true
#| code-summary: "Step 1: Efficiently install packages and load libraries"
if (!requireNamespace("pacman", quietly = TRUE)) {
  install.packages("pacman")
}

pacman::p_load(
  renv, 
  yaml, 
  rmarkdown, 
  rio, 
  tidyverse, 
  janitor, 
  lubridate, 
  fs,
  hms, 
  zoo, 
  kableExtra, 
  ggplot2, 
  shiny, 
  rsconnect, 
  packrat, 
  plotly, 
  htmlwidgets
  )
```

::: {.callout-caution collapse="true"}

#### Expand To Learn When to Run Step 2a

```{r}
#| code-fold: true
#| code-summary: "Step 2a: Load all XLSX files into a large dataframe list and clean dataframe names and sheets then export as an .RData file"
#| eval: false
dfs <- slowly_load_xlsx_files_to_list("data/raw")
export_to_rdata(dfs, "data/raw/rdata-files/")
```

:::

```{r}
#| code-fold: true
#| code-summary: "Step 2b: Efficiently load all data into a dataframe list"
base::load("data/raw/rdata-files/2024-05-05_dfs.RData")
```

```{r}
#| code-fold: true
#| code-summary: "Step 3: Load the specific Excel sheet of each dataframe and store in their respective data objects"
water_samples_data <- load_xlsx_sheet(dfs_list, "water_samples", "data_overview")

water_profiles_data <- map_dfr(c("l1", "l2", "l3", "l4"), ~ dfs_list$profile_data[[.x]])

clam_growth_data <- load_xlsx_sheet(dfs_list, "ksf_clam_growth", "sheet1")

oyster_growth_data <- load_xlsx_sheet(dfs_list, "ksf_oyster_cylinder_growth", "sheet1")

weather_data <- load_xlsx_sheet(dfs_list, "weather_data", "weather_ksf")

ksf_data <- load_xlsx_sheet(dfs_list, "ksf_compiled_data", "full_data")
```

## Data Tidying

::: {.panel-tabset}

### Water Samples

```{r}
#| label: tidy-water-samples-data-dataset
#| code-fold: true
#| code-summary: <i>Steps to clean data</i>
water_samples_data_tidied <- water_samples_data %>%
  slice(-c(44:52)) %>% 
  rename_with(~gsub("\\s*\\([^\\)]+\\)", "", .x)) %>% # <1>
  janitor::clean_names() %>% # <1>
  mutate( # <2>
    date = if_else(date == "44074", # <2>
            as.character(as.Date("2024-01-09")), # <2>
            format(dmy(date), "%Y-%m-%d")) # <2>
  ) %>% # <2>
  mutate(sample_id = 1:nrow(.)) %>% # <3>
  mutate(date = as.Date(date), # <4>
         across(c(nomilo_id, location, round, depth), as.factor)) %>% # <4>
  select(-c(sample_id, nomilo_id, tube_name)) %>% 
  mutate(location = str_to_title(location)) %>%
  mutate(location = factor(location, 
                           levels = c("Mid Buoy", "Back Buoy", "Auwai", "Production Dock"))) %>% 
   filter(!is.na(location))

paged_table(water_samples_data_tidied)
```

### Water Profiles

```{r}
#| label: tidy-profile-data-dataset
#| code-fold: true
#| code-summary: <i>Steps to clean data</i>
new_profile_var_names <- c("depth", "water_temperature", "dissolved_oxygen", "salinity", "conductivity", "visibility", "location", "date") #<1>

water_profiles_data_tidied <- water_profiles_data %>% #<2>
  select(-c(6, 8)) %>% #<2>
  mutate( #<3>
    temp_column1 = NA_character_,  #<3> 
    temp_column2 = NA_character_  #<3>
  ) %>%
  setNames(new_profile_var_names) %>% #<4> 
  mutate( #<5>
    location = ifelse(depth == "Location", water_temperature, NA_character_), 
    date = ifelse(depth == "Date",  water_temperature, NA_character_) #<5> 
  ) %>%
  fill(location, date, .direction = "down") %>% #<6>
  filter(depth != "Location", depth != "Date") %>% #<7>  
  mutate( #<8>
    location = case_when( #<8>
      location == "L1 Northwest buoy" ~ "back buoy",
      location == "L2 Middle Buoy" ~ "mid buoy",
      location == "L3 Production Dock" ~ "production dock", #<8>
      location == "L4 Auwai" ~ "Auwai", #<8>
      TRUE ~ location #<8>
    ), #<8>
    date = case_when( #<8>
      date %in% c("45258", "2023-11-28") ~ "2023-11-28", #<8>
      date %in% c("45282", "2023-12-21") ~ "2023-12-21", #<8>
      date %in% c("45536", "2024-01-09") ~ "2024-01-09", #<8>
      date %in% c("30/1/24", "30/01/24") ~ "2024-01-30", #<8>
      date %in% c("20/02/24", "20/2/24") ~ "2024-02-20", #<8>
      TRUE ~ date #<8>
    )) %>% #<8>
  mutate( #<8>
    date = as.Date(date, format = "%Y-%m-%d"), #<8> 
     conductivity = case_when( #<9> 
      row_number() %in% c(1:11, 53:62, 128:133, 159:161) ~ NA_character_, #<9> 
      TRUE ~ as.character(conductivity) #<9>
    ) #<9>
  ) %>% #<9>
  filter(!(depth %in% c("Samples", "Depth"))) %>% #<10> 
  mutate(date = as.Date(date), #<11> 
         across(c(depth, location), as.factor),
         across(c(water_temperature,  dissolved_oxygen, salinity, 
                  conductivity,visibility),  as.numeric)) %>% #<11>
   fill(visibility, .direction = "down") %>% #<12>
  mutate(visibility = if_else(date == "2023-11-28",  NA_real_, visibility)) %>%  #<13>
  mutate(location = str_to_title(location)) %>%
  mutate(location = factor(location, 
                           levels = c("Mid Buoy", "Back Buoy", "Auwai", "Production Dock"))) %>% 
  mutate(conductivity = coalesce(conductivity, salinity)) %>% 
  rename("salinity1" = salinity,
         "salinity" = conductivity) %>% 
  select(-salinity1)

paged_table(water_profiles_data_tidied)
```

### Clam Growth

```{r}
#| label: tidy-ksf-clam-growth-data-dataset
#| code-fold: true
#| code-summary: <i>Steps to clean data</i>
new_clam_var_names <- c( #<1>
  "sort_date", "color", "clams_in_count", "clams_in_lbs",  "clams_in_avg_per_lb",
  "clams_out_count", "clams_out_lbs", "clams_out_avg_per_lb", "growth_in_lbs", 
  "growth_pct", "sr", "days_btwn_sort" #<1>
  ) #<1>

new_clam_date_col <- c( #<2>
  "2023-10-17", "2023-12-06", "2023-12-12", "2024-01-02",  "2024-01-10",
  "2024-01-24", "2024-01-31", "2024-02-08", "2024-02-13", "2024-02-07",
  "2024-02-13", "2024-03-14", "2024-03-19" #<2>
  ) #<2>

clam_growth_data_tidied <- clam_growth_data %>%
  slice(-1) %>% #<3>
  setNames(new_clam_var_names) %>% #<4>
  mutate(date = as.Date(new_clam_date_col)) %>% #<4>
  dplyr::select(-sort_date) %>% #<4>
   pivot_longer( #<4>
    cols = c( #<4>
      clams_in_count, clams_in_lbs, clams_in_avg_per_lb,   clams_out_count, 
      clams_out_lbs, clams_out_avg_per_lb #<4>
      ), #<4>
    names_to = c("stage", ".value"), #<4>
    names_prefix = "clams_", #<4>
    names_sep = "_", #<4>
    values_to = "value" #<4>
  ) %>% #<4>
  mutate(stage = if_else(str_detect(stage, "in"), "In", "Out")) %>% #<5>
  rename(avg_per_lbs = avg) %>% #<6>
  mutate(across(c(color, stage), as.factor)) %>% #<7>
  mutate(across(c(count, lbs, avg_per_lbs, growth_in_lbs, growth_pct, sr), #<8>
                ~as.numeric(gsub("%", "", .)))) %>% #<8>
  arrange(date, color, stage) %>% #<9>
  dplyr::select(date, days_btwn_sort, color, stage, count, lbs, avg_per_lbs, #<9>
                growth_in_lbs, growth_pct, sr) %>%  #<9>
  rename("days_btwn_clams_sort" = days_btwn_sort,
         "clams_color" = color,
         "clams_stage" = stage,
         "clams_count" = count,
         "weight" = lbs,
         "avg_weight" = avg_per_lbs,
         "clams_growth" = growth_in_lbs,
         "clams_sr" = sr, 
          "date_out" = date
         ) %>% 
    mutate(date_in = date_out - days_btwn_clams_sort) %>%
relocate(c(date_in, date_out), .before = days_btwn_clams_sort) %>% 
  mutate(
    date = case_when(
      clams_stage == 'In' ~ date_in,
      clams_stage == 'Out' ~ date_out
    )
  ) %>%
  select(-date_in, -date_out) %>% 
   mutate(grouping_variable = rep(1:(n() / 2), each = 2))


paged_table(clam_growth_data_tidied)
```

### Oyster Growth

```{r}
#| label: tidy-ksf-oyster-cylinder-growth-data-dataset
#| code-fold: true
#| code-summary: <i>Steps to clean data</i>
oyster_var_names <- c(
  "date", "oyster_large_weight", "oyster_large_gain", "oyster_small_weight",
  "oyster_small_gain", "oyster_chlorophyll"
  ) #<1>

oyster_growth_data_tidied <- oyster_growth_data %>% 
  dplyr::select(c(1, 4, 5, 8, 9, 12)) %>% #<2> 
  slice(-1) %>% #<2>
  setNames(oyster_var_names) %>% #<1>
  pivot_longer( #<3>
    cols = c(oyster_large_weight, oyster_large_gain, #<3>
             oyster_small_gain, #<3>
             oyster_small_weight), #<3>
    names_to = c("oyster_size", ".value"), #<3>
    names_prefix = "oyster_", #<3>
    names_sep = "_", #<3>
    values_to = "value" #<3>
  ) %>% #<3>
  mutate(oyster_size = if_else(str_detect(oyster_size, "small"), "Small", "Large")) %>% #<4>
  mutate(date = as.Date(date), #<5>
         oyster_size = as.factor(oyster_size), #<5>
         across(c(weight, gain), as.numeric) #<5>
        ) %>% #<5>
  filter(date >= as.Date("2023-11-20") & date <= #<6>
           as.Date("2024-02-20")) %>%  #<6>
  mutate(weight = weight * 0.00220462) %>% 
  rename("growth_pct" = gain) %>%
  select(-growth_pct) %>% 
  filter(!is.na(weight) & oyster_size != "Large")

paged_table(oyster_growth_data_tidied)
```

### Weather Data

```{r}
#| label: tidy-weather-data-dataset
#| code-fold: true
#| code-summary: <i>Steps to clean data</i>
weather_data_tidied <- weather_data %>% 

janitor::clean_names() %>%  #<1>
   unite(date, year, month, day, sep = "-") %>% #<2>
  mutate(date = ymd(date)) %>% #<2>
   select(-c(1, 3)) %>% #<3>
  rename("outdoor_temperature" = outdoor_temp_f) %>% #<4>
   mutate(outdoor_temperature = (outdoor_temperature - 32) * (5/9)) %>% #<4>
  group_by(date) %>% #<5>
  summarise(across(where(is.numeric), \(x) mean(x, na.rm = TRUE))) %>% #<5>
  slice(-1) #<6>

paged_table(weather_data_tidied)
```

### Kauaʻi Sea Farm Data 

```{r}
#| label: tidy-ksf-compiled-data-dataset
#| code-fold: true
#| code-summary: <i>Steps to clean data</i>
ksf_data_tidied <- ksf_data %>% 
  rename_with(~gsub("\\s*\\([^\\)]+\\)", "", .x)) %>% # <1>
  janitor::clean_names() %>% # <1>
  rename(date = date_time) %>%  # <2>
  mutate(date = as.Date(date)) %>% # <2>
  filter(date >= as.Date("2023-11-20") & date <= as.Date("2024-02-20")) %>% # <2>
  arrange(date) %>%  # <2>
  dplyr::select(-c(external_voltage, wk_num, wind_dir, # <3>
                   spadd, outdoor_temperature, hourly_rain, # <3>
                   solar_radiation, resistivity, battery_capacity, # <3>
                   hour, daynum, data_pt, wind_sp, diradd, # <3>
                   wind_speed, wind_direction, tide, day, month, year) # <3>
                ) %>% # <3>
  dplyr::select(where(~ !anyNA(.))) %>%  # <4>
  group_by(date) %>% # <5>
  summarise(across(where(is.numeric), \(x) mean(x, na.rm = TRUE))) %>% # <5>
  rename("ksf_salinity" = salinity,
         "ksf_rdo_saturation" = rdo_saturation,
         "ksf_rdo_concentration" = rdo_concentration,
         "ksf_actual_conductivity" = actual_conductivity,
         "ksf_total_dissolved_solids" = total_dissolved_solids,
         "ksf_ammonium" = ammonium,
         "ksf_barometric_pressure" = barometric_pressure,
         "ksf_oxygen_partial_pressure" = oxygen_partial_pressure,
         "ksf_specific_conductivity" = specific_conductivity,
         "ksf_density" = density,
         "ksf_chlorophyll_a_fluorescence" = chlorophyll_a_fluorescence,
         "ksf_ammonium_m_v" = ammonium_m_v)

paged_table(ksf_data_tidied)
```

:::

## Data Exportation

### Exporting Processed Data

```{r}
dfs_to_export <- list( 
  water_samples_data_tidied = water_samples_data_tidied,
  water_profiles_data_tidied = water_profiles_data_tidied,
  clam_growth_data_tidied = clam_growth_data_tidied,
  oyster_growth_data_tidied = oyster_growth_data_tidied,
  weather_data_tidied = weather_data_tidied,
  ksf_data_tidied = ksf_data_tidied
) 

imap(dfs_to_export, ~ export_to_csv(.x, .y, "data/tidied"))
```

### Generating Data Dictionaries
