[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Nomilo Fishpond Biogoechemical Analysis",
    "section": "",
    "text": "Interactive Code\n\n\n\nThroughout this document, hover over the numbered annotations to the right of code chunks to reveal detailed explanations and comments about the code. Where drop-down italicized text is present, expand by pressing on arrow to see code."
  },
  {
    "objectID": "index.html#install-packages",
    "href": "index.html#install-packages",
    "title": "Nomilo Fishpond Biogoechemical Analysis",
    "section": "Install Packages",
    "text": "Install Packages\n\n```{r}\n#| label: install-packages\n#| eval: false\ninstall.packages(c(\"rio\", \"tidyverse\", \"janitor\", \"lubridate\", \"rmarkdown\"))\n```"
  },
  {
    "objectID": "index.html#load-libraries",
    "href": "index.html#load-libraries",
    "title": "Nomilo Fishpond Biogoechemical Analysis",
    "section": "Load Libraries",
    "text": "Load Libraries\n\n```{r}\n#| label: load-libraries\n\n1library(rio)\n2library(tidyverse)\n3library(janitor)\n4library(lubridate)\n5library(rmarkdown)\n```\n\n\n1\n\nFor importing excel data\n\n2\n\nFor cleaning of data\n\n3\n\nFor cleaning variable names\n\n4\n\nFor cleaning dates\n\n5\n\nFor displaying tables"
  },
  {
    "objectID": "index.html#get-raw-data-file-names",
    "href": "index.html#get-raw-data-file-names",
    "title": "Nomilo Fishpond Biogoechemical Analysis",
    "section": "Get Raw Data File Names",
    "text": "Get Raw Data File Names\n\n```{bash}\n#| label: get-raw-data-file-names\n1cd \"data/raw\"\n2ls\n```\n\n\n1\n\nChange directory to “data/raw”\n\n2\n\nList files within directory\n\n\n\n\n2024-02-28_dfs.RData\n2024-02-28_ksf-clam-growth.xlsx\n2024-02-28_ksf-compiled-data.xlsx\n2024-02-28_ksf-oyster-cylinder-growth.xlsx\n2024-02-28_profile-data.xlsx\n2024-02-28_water-samples.xlsx\n2024-02-28_weather-data.xlsx"
  },
  {
    "objectID": "index.html#import-raw-data",
    "href": "index.html#import-raw-data",
    "title": "Nomilo Fishpond Biogoechemical Analysis",
    "section": "Import Raw Data",
    "text": "Import Raw Data\nDefine vector of files to import by copying and pasting file names from above:\n\n```{r}\n#| label: create-vector-file-paths\nfiles_to_import &lt;- c(\n  \"data/raw/2024-02-28_ksf-clam-growth.xlsx\",\n  \"data/raw/2024-02-28_ksf-compiled-data.xlsx\",\n  \"data/raw/2024-02-28_ksf-oyster-cylinder-growth.xlsx\",\n  \"data/raw/2024-02-28_profile-data.xlsx\",\n  \"data/raw/2024-02-28_water-samples.xlsx\",\n  \"data/raw/2024-02-28_weather-data.xlsx\"\n)\n```\n\nUse the purrr::map() function to iteratively import all files in the files_to_import vector:\n\n```{r}\n#| label: iteratively-import-raw-data\n#| messages: false\n#| warnings: false\n#| eval: false\n1dfs &lt;- map(files_to_import, import_list)\nsave(dfs, file = \"data/raw/2024-02-28_dfs.RData\")\n```\n\n\n1\n\nIt takes a while to import these dataframes, so we’re going to only import it once and then export it as a .RData file to load it back in more efficiently\n\n\n\n\nEfficiently load import raw data:\n\n```{r}\n#| label: efficiently-load-raw-data\nload(\"data/raw/2024-02-28_dfs.RData\")\n```\n\nRename datasets:\nWe will always use snakecase when naming our data objects and functions (e.g., data_object_name or function_name()).\n\n```{r}\n#| label: rename-raw-datasets\n1names(dfs) &lt;- gsub(\"data/raw/2024-02-28_|\\\\.xlsx$|\\\\.xls$\", \"\", files_to_import)\n2names(dfs) &lt;- gsub(\"-\", \"_\", names(dfs))\n3names(dfs)\n```\n\n\n1\n\nRemove prefixes and file extensions\n\n2\n\nReplace hyphens with underscores\n\n3\n\nCheck if names were outputted correctly\n\n\n\n\n[1] \"ksf_clam_growth\"            \"ksf_compiled_data\"         \n[3] \"ksf_oyster_cylinder_growth\" \"profile_data\"              \n[5] \"water_samples\"              \"weather_data\"              \n\n\nRename each sheet within each raw dataset to be lowercased and replace spaces with underscores:\n\n```{r}\n#| label: rename-sheets-within-each-raw-dataset\ndfs &lt;- map(dfs, ~ set_names(.x, gsub(\" \", \"_\", tolower(names(.x)))))\n```"
  },
  {
    "objectID": "index.html#tidy-raw-data",
    "href": "index.html#tidy-raw-data",
    "title": "Nomilo Fishpond Biogoechemical Analysis",
    "section": "Tidy Raw Data",
    "text": "Tidy Raw Data\n\nCreate Separate Datasets\n\n```{r}\n#| label: create-separate-datasets\nksf_clam_growth_data &lt;- dfs$ksf_clam_growth$sheet1\nksf_compiled_data &lt;- dfs$ksf_compiled_data$full_data\nksf_oyster_cylinder_growth_data &lt;- dfs$ksf_oyster_cylinder_growth$sheet1\nprofile_data &lt;- dfs$profile_data$final_data\nwater_samples_data &lt;- dfs$water_samples$data_overview\nweather_data &lt;- dfs$weather_data$weather_ksf\n```\n\n\n\nTidying Processes\n\nksf_clam_growth_dataksf_compiled_dataksf_oyster_cylinder_growth_dataprofile_datawater_samples_dataweather_data\n\n\n\n\nSteps to clean data\n```{r}\n#| label: tidy-ksf-clam-growth-data-dataset\n#| code-fold: true\n#| code-summary: &lt;i&gt;Steps to clean data&lt;/i&gt;\nnew_var_names &lt;- c(\"sort_date\", \"color\", \"clams_in_count\", \"clams_in_lbs\", \"clams_in_avg_per_lb\",\n                   \"clams_out_count\", \"clams_out_lbs\", \"clams_out_avg_per_lb\", \"growth_in_lbs\",\n                   \"growth_pct\", \"sr\", \"days_btwn_sort\")\n\nksf_clam_growth_data_tidied &lt;- ksf_clam_growth_data %&gt;%\n  slice(-1) %&gt;%\n  setNames(new_var_names) %&gt;%\n  pivot_longer(\n    cols = c(clams_in_count, clams_in_lbs, clams_in_avg_per_lb,\n             clams_out_count, clams_out_lbs, clams_out_avg_per_lb),\n    names_to = c(\"stage\", \".value\"),\n    names_prefix = \"clams_\", \n    names_sep = \"_\", \n    values_to = \"value\"\n  ) %&gt;%\n  mutate(stage = if_else(str_detect(stage, \"in\"), \"In\", \"Out\")) %&gt;%\n  rename(avg_per_lbs = avg) %&gt;% \n  mutate(across(c(color, stage), as.factor)) %&gt;%\n  mutate(across(c(count, lbs, avg_per_lbs, growth_in_lbs, growth_pct, sr), ~as.numeric(gsub(\"[^0-9.-]\", \"\", .)))) %&gt;% \n  arrange(sort_date, color, stage) %&gt;% \n  dplyr::select(sort_date, days_btwn_sort, color, stage, count, lbs, avg_per_lbs, \n                growth_in_lbs, growth_pct, sr)\n\npaged_table(ksf_clam_growth_data_tidied)\n```\n\n\n\n  \n\n\n\n\n\n\n\nSteps to clean data\n```{r}\n#| label: tidy-ksf-compiled-data-dataset\n#| code-fold: true\n#| code-summary: &lt;i&gt;Steps to clean data&lt;/i&gt;\nksf_compiled_data_tidied &lt;- ksf_compiled_data %&gt;% \n1  rename_with(~gsub(\"\\\\s*\\\\([^\\\\)]+\\\\)\", \"\", .x)) %&gt;%\n  janitor::clean_names() %&gt;%\n2  rename(date = date_time) %&gt;%\n  mutate(date = as.Date(date)) %&gt;%\n  filter(date &gt;= as.Date(\"2023-11-20\") & date &lt;= as.Date(\"2024-02-20\")) %&gt;%\n  arrange(date) %&gt;%\n3  dplyr::select(-c(external_voltage, wk_num, wind_dir,\n                   spadd, outdoor_temperature, hourly_rain,\n                   solar_radiation, resistivity, battery_capacity,\n                   hour, daynum, data_pt, wind_sp, diradd,\n                   wind_speed, wind_direction, tide, day, month, year)\n                ) %&gt;%\n4  dplyr::select(where(~ !anyNA(.))) %&gt;%\n5  group_by(date) %&gt;%\n  summarise(across(where(is.numeric), \\(x) mean(x, na.rm = TRUE)))\n\npaged_table(ksf_compiled_data_tidied)\n```\n\n\n\n1\n\nClean variable names by removing everything in parentheses, using lowercase and underscores in place of spaces\n\n2\n\nRename the date_time variable to date, filter to desired date range and sort by date\n\n3\n\nRemove unnecessary variables\n\n4\n\nRemove columns with containing all NA values\n\n5\n\nGroup by date and calculate the average of every variable for each day\n\n\n\n\n\n  \n\n\n\n\n\n\n\nSteps to clean data\n```{r}\n#| label: tidy-ksf-oyster-cylinder-growth-data-dataset\n#| code-fold: true\n#| code-summary: &lt;i&gt;Steps to clean data&lt;/i&gt;\n\n1oyster_var_names &lt;- c(\"date\", \"oyster_large_weight\", \"oyster_large_gain\", \"oyster_small_weight\", \"oyster_small_gain\", \"oyster_chlorophyll\")\n\nksf_oyster_cylinder_growth_data_tidied &lt;- ksf_oyster_cylinder_growth_data %&gt;% \n2  dplyr::select(c(1, 4, 5, 8, 9, 12)) %&gt;%\n  slice(-1) %&gt;%\n  setNames(oyster_var_names) %&gt;%\n3  pivot_longer(\n    cols = c(oyster_large_weight, oyster_large_gain,\n             oyster_small_gain,\n             oyster_small_weight),\n    names_to = c(\"oyster_size\", \".value\"),\n    names_prefix = \"oyster_\",\n    names_sep = \"_\",\n    values_to = \"value\"\n  ) %&gt;%\n4  mutate(oyster_size = if_else(str_detect(oyster_size, \"small\"), \"Small\", \"Large\")) %&gt;%\n5  mutate(oyster_size = as.factor(oyster_size),\n         across(c(weight, gain), as.numeric)\n        ) %&gt;%\n6  filter(date &gt;= as.Date(\"2023-11-20\") & date &lt;=\n           as.Date(\"2024-02-14\"))\n\npaged_table(ksf_oyster_cylinder_growth_data_tidied)\n```\n\n\n\n1\n\nManually set variable names\n\n2\n\nSelect desired columns and remove first row\n\n3\n\nConvert from wide to long format\n\n4\n\nCreate a new variable that differentiates oyster size\n\n5\n\nAdjust data types to numeric and factor\n\n6\n\nFilter to desired date range\n\n\n\n\n\n  \n\n\n\n\n\n\n\nSteps to clean data\n```{r}\n#| label: tidy-profile-data-dataset\n#| code-fold: true\n#| code-summary: &lt;i&gt;Steps to clean data&lt;/i&gt;\nprofile_data_tidied &lt;- profile_data\n\npaged_table(profile_data_tidied)\n```\n\n\n\n  \n\n\n\n\n\n\n\nSteps to clean data\n```{r}\n#| label: tidy-water-samples-data-dataset\n#| code-fold: true\n#| code-summary: &lt;i&gt;Steps to clean data&lt;/i&gt;\nwater_samples_data_tidied &lt;- water_samples_data\n\npaged_table(water_samples_data_tidied)\n```\n\n\n\n  \n\n\n\n\n\n\n\nSteps to clean data\n```{r}\n#| label: tidy-weather-data-dataset\n#| code-fold: true\n#| code-summary: &lt;i&gt;Steps to clean data&lt;/i&gt;\nweather_data_tidied &lt;- weather_data\n\npaged_table(weather_data_tidied)\n```\n\n\n\n  \n\n\n\n\n\n\n\n\nExport Tidied Datasets\nExport tidied data sets to csv into data/tidied folder.\n\n```{r}\n#| label: export-tidied-datasets\n#| eval: false\nwrite.csv(ksf_compiled_data_tidied, file = \"data/tidied/ksf_compiled_data_tidied.csv\", row.names = FALSE)\n```\n\nExport merged final data set into data/outputs folder."
  },
  {
    "objectID": "index.html#data-dictionary",
    "href": "index.html#data-dictionary",
    "title": "Nomilo Fishpond Biogoechemical Analysis",
    "section": "Data Dictionary",
    "text": "Data Dictionary"
  },
  {
    "objectID": "index.html#exploratory-data-analysis",
    "href": "index.html#exploratory-data-analysis",
    "title": "Nomilo Fishpond Biogoechemical Analysis",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis"
  },
  {
    "objectID": "index.html#correlational-analysis",
    "href": "index.html#correlational-analysis",
    "title": "Nomilo Fishpond Biogoechemical Analysis",
    "section": "Correlational Analysis",
    "text": "Correlational Analysis"
  },
  {
    "objectID": "fieldwork-templates.html",
    "href": "fieldwork-templates.html",
    "title": "Fieldwork Templates",
    "section": "",
    "text": "Back to top"
  }
]