---
format: 
  dashboard:
    logo: www/logos/fish-fins-solid.svg
    nav-buttons:
      - icon: github
        href: https://github.com/Lysbethk/nomilo-fishpond-analysis
---
 
```{r}
#| echo: false
#| message: false
#| warning: false
#| results: 'hide'
library(fs)
library(quarto)

quarto_file <- "code/dashboard-modules/README.qmd"

capture.output(quarto_render(quarto_file), type = "message")
```

# Interactive Visualizations

## Sidebar {.sidebar}

```{r}
htmltools::includeMarkdown(here::here("code/dashboard-modules/README.md"))
```

## Column

```{r}
#| title: "Cell Growth Changes"

print("Plot")
```

```{r}
#| title: "Nutrient Fluctuations"
print("Plot")
```

```{r}
#| title: "Water Stratification"
print("Plot")
```

## Columm

```{r}
#| title: "Data Collection Sites at Nomilo Fishpond Located in Kauaʻi, Hawaiʻi"
#| echo: false
#| padding: 0px
library(leaflet)
library(tidyverse)

location_coords <- data.frame(
  location = c("Back Buoy", "Middle Buoy",
               "Production Dock", "Auwai"),
  lat = c(21.8875, 21.8865556, 21.8851, 21.885),
  lon = c(-159.5268, -159.5273056, -159.5276, -159.5281)
)

lat <- 21.88625
long <- -159.52725

m <- leaflet(location_coords) %>%
  addProviderTiles("Esri.WorldImagery") %>%
  setView(long, lat, zoom = 17) %>%
  addCircleMarkers(
    ~lon, ~lat, 
    radius = 5, 
    color = "orange", 
    fillOpacity = 0.8
  )

m <- purrr::reduce(1:nrow(location_coords), function(map, i) {
  map %>% addLabelOnlyMarkers(
    location_coords$lon[i], 
    location_coords$lat[i], 
    label = location_coords$location[i],
    labelOptions = labelOptions(
      noHide = TRUE, 
      textOnly = TRUE, 
      direction = "right",
      offset = c(10, 10),  
      style = list(color = "white", fontWeight = "bold", fontSize = "13px") 
    )
  )
}, .init = m)

m
```

```{r}
#| title: "Clam Growth Trends"
print("Plot")
```

```{r}
#| title: "Oyster Growth Trends"
#| echo: false
if (!requireNamespace("pacman", quietly = TRUE)) {
  install.packages("pacman")
}

pacman::p_load(
  fs,
  here,
  rio,
  tidyverse,
  ggplot2,
  patchwork,
  ggiraph,
  shiny,
  wesanderson,
  epoxy
  )

final_dataset_paths <- dir_ls(here("data", "output"))

dfs <- final_dataset_paths %>%
  map(import) %>%
  set_names(map(names(.), ~ str_replace(.x, ".*_(.*)-final\\.csv$", "\\1") %>%
              str_replace_all(., "-", "_")))

# Define a function to create named vectors
create_units_vector <- function(names, unit) {
  setNames(rep(unit, length(names)), names)
}

# Define names and units
names_units <- list(
  "cells/ml" = c(
    "heterotrophic_bacteria",
    "large_phytoplankton",
    "synechococcus_population_1",
    "synechococcus_population_2",
    "prochlorococcus",
    "myster_cells_events"
  ),
  "mol/L" = c(
    "phosphate",
    "silicate",
    "nitrate_nitrite",
    "ammonia"
  ),
  "ug/L" = c(
    "chlorophyll_a"
  ),
  "mg/L" = c(
    "dissolved_oxygen",
    "ksf_rdo_concentration",
    "ksf_rdo_saturation",
    "ksf_ammonium"
    ),
  "C" = c(
    "water_temperature",
    "outdoor_temperature"
    ),
  "g" = "weight",
  "mS/cm" = "salinity",
  "ft" = "visibility",
  "PSU" = "ksf_salinity",
  "g/cm3" = "ksf_density",
  "PPT" = "ksf_total_dissolved_solids",
  "RFU" = "ksf_chlorophyll_a_fluorescence",
  "mph" = "wind_speed_mph",
  "in/hr" = "hourly_rain_inch_hr"
)

# Create the named vector using map and flatten from purrr
units_vector <- names_units %>%
  imap(create_units_vector) %>%
  flatten_chr()

get_unit <- function(var, names_units) {
  unit <- names(names_units)[detect_index(names_units, ~ var %in% .)]
  if (!is.null(unit)) {
    return(unit)
  } else {
    return(NA)
  }
}

weight_unit <- get_unit("weight", names_units)

oyster_growth <- dfs$oyster_growth_data %>% 
  select(-oyster_chlorophyll)

# Define colors from the palette
blue_color <- "#0A9F9D"  # A blue-like color from your palette
dark_brown_color <- "#C18748"  # A dark brown color from your palette
light_brown_color <- "#CEB175"

# Plotting code using specified colors
p <- ggplot(oyster_growth, aes(x = date, y = weight)) +
  geom_line(color = blue_color, size = 2) +  
  # geom_text(aes(label = round(weight, 2)),
  #           vjust = -2,
  #           hjust = 0.65,
  #           color = "black",
  #           size = 3) +
  geom_point_interactive(
    aes(size = weight, 
        color = light_brown_color,  # Set the color for the points
        tooltip = paste0("Weight: ", 
                         round(weight, 2), 
                         " (", 
                         weight_unit, 
                         ")"), 
        data_id = date),
    alpha = 0.9,  # Set transparency of the points
    hover_css = paste0("fill: ", dark_brown_color, ";"),
    show.legend = FALSE  # This argument removes the size legend
  ) +
  scale_size_continuous(range = c(3, 10)) +
  labs(
    # title = "Growth of Small Oysters Over Time",
    x = "Date",
    y = paste0("Weight", " (", weight_unit, ")")
  ) +
  scale_y_continuous(limits = c(NA, max(oyster_growth$weight) * 1.1)) +
  scale_x_date(date_labels = "%m/%d/%Y", date_breaks = "1 week") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1), 
    axis.title.x = element_text(size = 14, face = "bold", margin = margin(t = 10, b = 10)), 
  axis.title.y = element_text(size = 14, face = "bold", margin = margin(t = 10, r = 10)), 
    axis.text = element_text(size = 10),  # Axis labels size 10
    legend.position = "none",
    plot.margin = unit(c(0,0,0,0), "cm")
  ) +
  scale_color_identity()  # Ensure that the color values are taken literally

# p

# Convert ggplot object to ggiraph
interactive_plot <- girafe(ggobj = p)

# Print the interactive plot
interactive_plot
```

## Column

```{r}
#| title: "Water Quality Data Collected by KSF"
print("Plot")
```

```{r}
#| title: "Weather Data Collected by KSF"
print("Plot")
```

# Data Dictionaries 

## Sidebar {.sidebar}

```{r}
htmltools::includeMarkdown(here::here("code/dashboard-modules/README.md"))
```

## Column {.flow}

<center><iframe src="https://aceria.shinyapps.io/dataset-description/" width="100%" height="900" frameborder="1"></iframe></center>

# Data Collection

## Sidebar {.sidebar}

```{r}
htmltools::includeMarkdown(here::here("code/dashboard-modules/README.md"))
```

## Row

```{r}
#| title: "Upload KSF Data and Export Visualizations"
print("App")
```

## Row

```{r}
#| title: "Collect Water Sampling and Profile Data"
print("App")
```


